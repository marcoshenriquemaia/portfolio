version: '3'

services:
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
      PORT: 3000
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE: email_queue
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ./apps/gateway:/app
    networks:
      - my-network

  world:
    build:
      context: ./apps/world
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 3001:3001
    environment:
      NODE_ENV: production
      PORT: 3001
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ./apps/world:/app
    networks:
      - my-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - my-network
    volumes:
      - /var/lib/rabbitmq
    env_file:
      - ./apps/rabbitmq/rabbitmq.env

  redis:
    image: redis:latest
    restart: unless-stopped

volumes:
  data:


networks:
  my-network:
